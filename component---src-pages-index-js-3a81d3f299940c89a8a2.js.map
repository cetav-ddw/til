{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["pageQuery","IndexPage","data","title","allMarkdownRemark","edges","map","post","reformatted","putValuesHTML","selector","attrib","value","html","node","className","key","id","to","frontmatter","path","author","date","dangerouslySetInnerHTML","__html"],"mappings":"0FAAA,gGAoCaA,GApCb,cAoCsB,cAmBPC,UAhDG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,6BACE,kBAAC,IAAD,CAAKC,MAAM,SACVD,EAAKE,kBAAkBC,MAAMC,KAAI,SAAAC,GAEhC,IAAMC,EAAcC,YAAc,CAChCC,SAAU,IACVC,OAAQ,SACRC,MAAO,SACPC,KAAMN,EAAKO,KAAKD,OAElB,OACE,yBAAKE,UAAU,OAAOC,IAAKT,EAAKO,KAAKG,IACnC,kBAAC,OAAD,CAAMC,GAAIX,EAAKO,KAAKK,YAAYC,MAC9B,wBAAIL,UAAU,eAAeR,EAAKO,KAAKK,YAAYhB,QAErD,sCACOI,EAAKO,KAAKK,YAAYE,OAD7B,OACyC,IACtCd,EAAKO,KAAKK,YAAYG,MAEzB,wBAAIP,UAAU,sBACd,yBAAKQ,wBAAyB,CAAEC,OAAQhB,KACxC,wBAAIO,UAAU","file":"component---src-pages-index-js-3a81d3f299940c89a8a2.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport SEO from '../components/seo';\nimport putValuesHTML from '../utils/html-parse-options';\nimport '../components/arti.scss';\nimport './index.scss';\n\nconst IndexPage = ({ data }) => (\n  <div>\n    <SEO title='Home' />\n    {data.allMarkdownRemark.edges.map(post => {\n      // To return all the anchors with a target=\"_blank\"\n      const reformatted = putValuesHTML({\n        selector: 'a',\n        attrib: 'target',\n        value: '_blank',\n        html: post.node.html\n      });\n      return (\n        <div className='arti' key={post.node.id}>\n          <Link to={post.node.frontmatter.path}>\n            <h3 className='arti__title'>{post.node.frontmatter.title}</h3>\n          </Link>\n          <small>\n            Por {post.node.frontmatter.author} en {' '}\n            {post.node.frontmatter.date}\n          </small>\n          <hr className=\"arti__title--line\" />\n          <div dangerouslySetInnerHTML={{ __html: reformatted }} />\n          <hr className=\"arti__title--endline\" />\n        </div>\n      );\n    })}\n  </div>\n)\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date}) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            path\n            title\n            date\n            author\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}